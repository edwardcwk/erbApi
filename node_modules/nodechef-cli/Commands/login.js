var endpoints = require('../endpoints'),
    request = require('request'),
    path = require('path'),
    fs = require('fs'),
    cli = require('../cli'),
    _CMD = 'login',
    readline = require('readline'); 

function Help() {
    var str = [];
    str.push(cli.colors.BRIGHT_CYAN);
    str.push('Usage:   nc login [OPTIONS]');
    str.push(cli.colors.RESET);
    str.push('\n\n');
    str.push(cli.colors.BRIGHT_CYAN);
    str.push('Options:\n');
    str.push(cli.colors.RESET);
    str.push('  -em    Your email address as provided when you signed up\n');
    str.push('  -pw    Your current account password\n');
    str.push('  -c     Provide the 6-digit code for Two-factor authentication\n');
    str.push('\n')
    str.push(cli.colors.BRIGHT_CYAN);
    str.push('Examples:\n');
    str.push(cli.colors.RESET);
    str.push('  nc login -em liz@nodechef.com -pw cannottellyou\n');
    console.log(str.join(""));
}

function cmpAuthentication(email, password, tfa_code) {
    if (email == null || email == "" || email === undefined) {
        cli.errors.expectsParameter('-em', _CMD);
        process.exit(1);
    }

    if (password == null || password == "" || password == undefined) {
        cli.errors.expectsParameter('-pw', _CMD);
        process.exit(1);
    }

    cli.debug(endpoints.login);

    var obj = { email: email, password: password };

    if (tfa_code != null) obj['tfa_code'] = tfa_code;

    request({
        method: 'POST',
        url: endpoints.login,
        body: JSON.stringify(obj),
        headers: {
            'User-Agent': global.__NC_CLI
        },
    }, function (err, res, body) {
        if (err) {
            cli.writeerror('Login fail with error: ' + err);
            process.exit(1);
        }

        try {
            var obj = JSON.parse(body);
            if (res.statusCode == 200) {
                var apikey = obj.apikey;
                var auth_file = path.join(global.__NC_DIR, 'ncauth.json');
                fs.writeFileSync(auth_file, body);
                cli.writeline('Ok');
            }
            else
                throw obj.err;
        }
        catch (e) {
            cli.writeerror(e);
            process.exit(1);
        }
    });
}

module.exports = function (args) {
    if (cli.requestingHelp(args)) {
        Help();
        return;
    }

    var email, password, tfa_code = null;

    function validateTfa() {
        if (tfa_code.length != 6 || isNaN(tfa_code)) {
            cli.writeerror('Must provide a valid 6-digit code');
            process.exit(1);
        }
    }

    if (!args || !args.length) {
        const rl = readline.createInterface({
            input: process.stdin,
            output: process.stdout
        });

        rl.question('Enter your email address: ', (answer) => {
            email = answer;
            rl.question('Enter your password: ', (answer) => {
                password = answer;
                rl.question('Optional 6-digit code for Two-factor authentication or just hit enter: ', (answer) => {
                    if (answer != null && answer.length > 0) {
                        tfa_code = answer;
                        validateTfa(); 
                    }
                   
                    cmpAuthentication(email, password, tfa_code);
                }); 
            }); 
        });
    }
    else {
        for (var i = 0, v; i < args.length; i += 2) {
            switch (args[i]) {
                case '-em':
                    email = cli.nextArg(args, i);
                    break;
                case '-pw':
                    password = cli.nextArg(args, i);
                    break;
                case '-c':
                    tfa_code = cli.nextArg(args, i);
                    validateTfa(); 
                    break;
                default:
                    cli.errors.unknownSwitch(args[i], _CMD);
                    process.exit(1);
                    return;
            }
        }

        cmpAuthentication(email, password, tfa_code); 
    }

    
}