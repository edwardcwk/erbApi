var cli = require('../cli'),
    fs = require('fs'),
    path = require('path'),
    request = require('request'), 
    remote = require('../remotecommon'), 
    endpoints = require('../endpoints'); 

var _CMD = 'stop'; 

function Help() {
    var str = [];
    str.push(cli.colors.BRIGHT_CYAN);
    str.push('Usage:   nc stop [OPTIONS]');
    str.push(cli.colors.RESET);
    str.push('\n\n');
    str.push(cli.colors.BRIGHT_CYAN);
    str.push('Options:\n');
    str.push(cli.colors.RESET);
    str.push('  -i        Specify the name of your application\n');
    str.push('  -t        Seconds to wait for stop before killing the container(s)\n');
    str.push('\n')
    str.push(cli.colors.BRIGHT_CYAN);
    str.push('Examples:\n');
    str.push(cli.colors.RESET);
    str.push('  nc stop -i hello-world-app\n');
    str.push('  nc stop -i hello-world-app -t 10\n');
    console.log(str.join(""));
}

function HandleRequest(args) {
    if (cli.requestingHelp(args)) {
        Help();
        return; 
    }

    if (!cli.isAuthenticated())
        return;

    var application_name = null, time = 100;
    if (args && args.length > 0) {
        for (var i = 0, v; i < args.length; i += 2) {
            switch (args[i]) {
                case '-i':
                    application_name = cli.nextArg(args, i);
                    break;
                case '-t':
                    time = cli.nextIntArg(args, i);
                    break;
                default:
                    cli.errors.unknownSwitch(args[i], _CMD);
                    process.exit(1);
                    return;
            }
        }
    }

    if (application_name == null) {
        application_name = cli.resolveAppName(process.cwd());

        if (application_name == null || application_name == "") {
            cli.errors.expectsName(_CMD);
            return;
        }
    }

    remote.GetBridgeRoute(application_name, function (cloud_env) {
        var query_str = null;
        
        var _url = endpoints.stop(cloud_env);
        cli.debug(_url);

        if (cloud_env == endpoints.envBM) {
            remote.ExpectsOk(_url, { cname: application_name }, 'PUT');
        }
        else {
            cli.errors.notImplemented('Stop command - VPS CLOUD');
            process.exit(1);
        }
    }); 
}

module.exports = HandleRequest; 